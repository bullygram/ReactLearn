{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","component/ErrorBoundries.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","ele","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","height","overflowY","border","children","ErrorBoundries","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","user","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACxB,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCuBLK,EA5BE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAOf,OACI,8BAGAA,EAAOC,KAAI,SAACC,EAAKC,GAEb,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCLFC,EAXG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAChBU,KAAK,SAASC,YAAc,gBAC5BC,SAAUH,OCMRI,G,MAXA,SAACC,GAEZ,OAEI,qBAAKC,MAAO,CAACC,OAAO,QAASC,UAAU,SAAUC,OAAO,mBAAxD,SACKJ,EAAMK,aCeJC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SAAiB,8DAExBG,KAAKX,MAAMK,a,GAfGQ,aCyDdC,E,kDAlDX,aAAc,IAAD,8BACT,gBAQJC,eAAgB,SAACC,GAEb,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,QAC1CC,QAAQC,IAAIL,EAAME,OAAOC,QAVzB,EAAKZ,MAAQ,CACTjB,OAAS,GACT2B,YAAc,IAElBG,QAAQC,IAAI,eANH,E,qDAgBb,WAAoB,IAAD,OACfC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKd,SAAS,CAACtB,OAAOoC,OAElCN,QAAQC,IAAI,uB,oBAGhB,WACID,QAAQC,IAAI,UACZ,MAA8BV,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTU,EAAiBrC,EAAOsC,QAC1B,SAAAC,GAAU,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASd,EAAYa,kBAElE,OAASxC,EAAO0C,OAGb,sBAAK9C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,2BAEA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAWzB,OAAQqC,WAR1B,6C,GAlCKM,IAAMpB,WCKTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ffeae31b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id})=>{\r\n    return(\r\n        <div className = \"bg-light-green dib br3 pd3 ma2 bw2 shadow-5 grow tc\">\r\n            <img alt=\"Avathar\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=>{\r\n\r\n    // if(true){\r\n\r\n    //     throw new Error(\"HaHa\");\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n        \r\n        {\r\n        robots.map((ele, i) => \r\n        {\r\n            return(\r\n            <Card \r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n            />\r\n            )\r\n        }\r\n    )\r\n    }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n             type=\"search\" placeholder = 'Search Robots'\r\n             onChange={searchChange}\r\n             />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";  \r\n\r\nconst Scroll = (props)=>{\r\n\r\n    return (\r\n        \r\n        <div style={{height:\"500px\", overflowY:\"scroll\", border:\"solid 5px black\"}}>\r\n            {props.children}\r\n        </div>\r\n            \r\n            )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\n\r\nclass ErrorBoundries extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError) return <h1>Ooops, something went wrong!</h1>\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundries;","import React from \"react\";\r\nimport CardList from \"../component/CardList\";\r\nimport SearchBox from \"../component/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../component/Scroll\";\r\nimport ErrorBoundries from \"../component/ErrorBoundries\";\r\n\r\nclass App extends React.Component{\r\n\r\n    // Creating a state \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : \"\",\r\n        } \r\n        console.log(\"Constructor\");\r\n    }\r\n\r\n    onSearchChange= (event)=>{\r\n\r\n        this.setState({searchfield : event.target.value});\r\n        console.log(event.target.value);\r\n        }\r\n\r\n    \r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=>response.json())\r\n        .then(user=>this.setState({robots:user}));\r\n        \r\n        console.log(\"componentDidMount\");\r\n    }\r\n\r\n    render(){\r\n        console.log(\"Render\");\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(\r\n            robot => {return robot.name.toLowerCase().includes(searchfield.toLowerCase())});\r\n        \r\n         return (!robots.length) ? \r\n            (<h1>Loading</h1>):\r\n            (\r\n            <div className=\"tc\">\r\n            <h1 className=\"f2\">Robot Friends</h1>\r\n\r\n            <SearchBox searchChange = {this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundries>\r\n                    <CardList  robots={filteredRobots}/>\r\n                </ErrorBoundries>\r\n            </Scroll>\r\n            \r\n            </div>\r\n             );\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './container/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}